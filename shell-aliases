##### FUNCTIONS #####
# grh for bash 
# example: `grh 7` will execute `git reset HEAD~7`
grh() {
    if [[ $1 =~ ^[0-9]+$ ]]; then
        git reset HEAD~$1
    else
        echo "Please provide a valid number of commits to reset."
    fi
}

##### ALIASES #####

# misc aliases
alias et='echo $RANDOM_THEME' # Used to output the current zsh theme
alias n='nvim'
alias l='ls -aX'
alias ff='find ~ -type f -name'
alias t='tree --gitignore --noreport'
alias e='exit'

# git aliases
alias gg='git grep -Iin' # Finds all case-insensitive occurences of a pattern while respecting .gitignore. Prints line, line number and file path
alias g='git'
alias gb='git branch'
alias gclean='git clean -f -d'
alias gco='git checkout'
alias gcob='git checkout -b'
alias gcom='git checkout main'
alias gcm='git commit -m'
alias gf='git fetch'
alias gr='git reset'
alias grs='git restore'
alias gm='git merge'
alias gst='git stash'
alias gmm='git merge main'
alias gs='git status'
alias gd='git diff'
alias gdc='git diff --cached'
alias gl='git log'
alias gpush='git push'
alias gpushf='git push -f'
alias gpull='git pull'
alias gpullf='git pull -f'
alias gcob='git checkout -b'
alias ga='git add'
alias gaa='git add .'
alias gau='git update-index --assume-unchanged' # Locally untracks files from git so your code can differ from the repo
alias gnau='git update-index --no-assume-unchanged' # Undo the git tracking removal of the previous command

# rust
alias cg='cargo'
alias cgr='cargo run'
alias cgc='cargo clippy'
alias cgw='cargo watch -x run'

########## FISH SHELL SPECIFIC ##########

##### FUNCTIONS #####
# grh for fish
# example: `grh 7` will execute `git reset HEAD~7`
#function grh
#    if string match -qr '^[0-9]+$' $argv[1]
#        git reset HEAD~$argv[1]
#    else
#        echo "Please provide a valid number of commits to reset."
#    end
#end

###### KEYBINDS #####
bind \e\[3\;5\~ 'kill-word'
bind \cH 'backward-kill-word'
bind \cU 'kill-whole-line'
